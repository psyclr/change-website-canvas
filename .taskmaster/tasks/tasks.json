{
  "seo-optimization": {
    "tasks": [
      {
        "id": 1,
        "title": "Bundle Analysis & Heavy Components",
        "description": "Проанализировать bundle размер и выявить тяжелые компоненты",
        "status": "completed",
        "priority": "high",
        "dependencies": [],
        "details": "Lighthouse показал критические проблемы: FCP: 3.6s, LCP: 4.0s, Speed Index: 6.1s. Использовать webpack-bundle-analyzer для анализа, найти самые тяжелые chunk'ы и оптимизировать их размер.",
        "testStrategy": "Измерить размер bundle до и после оптимизации, проверить что функциональность не нарушена",
        "subtasks": []
      },
      {
        "id": 2,
        "title": "First Contentful Paint Optimization",
        "description": "Оптимизировать First Contentful Paint (3.6s → <1.8s)",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1"
        ],
        "details": "Оптимизировать критический путь рендеринга, внедрить critical CSS inline, отложить некритические ресурсы",
        "testStrategy": "Запустить Lighthouse до и после, убедиться что FCP < 1.8s",
        "subtasks": []
      },
      {
        "id": 3,
        "title": "Largest Contentful Paint Optimization",
        "description": "Улучшить Largest Contentful Paint (4.0s → <2.5s)",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1",
          "2"
        ],
        "details": "Оптимизировать изображения, реализовать lazy loading, оптимизировать шрифты",
        "testStrategy": "Lighthouse аудит, LCP должен быть < 2.5s",
        "subtasks": []
      },
      {
        "id": 4,
        "title": "Speed Index Acceleration",
        "description": "Ускорить Speed Index (6.1s → <3.4s)",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1",
          "2",
          "3"
        ],
        "details": "Реализовать code splitting на уровне роутов, tree shaking, оптимизировать загрузку ресурсов",
        "testStrategy": "Lighthouse Speed Index должен быть < 3.4s",
        "subtasks": []
      },
      {
        "id": 5,
        "title": "Code Splitting Implementation",
        "description": "Реализовать code splitting на уровне роутов",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "1"
        ],
        "details": "Настроить динамические импорты для роутов, разделить vendor и app chunks",
        "testStrategy": "Проверить что роуты загружаются отдельными chunk'ами",
        "subtasks": []
      },
      {
        "id": 6,
        "title": "Lazy Loading Images",
        "description": "Внедрить lazy loading для изображений",
        "status": "pending",
        "priority": "medium",
        "dependencies": [],
        "details": "Использовать Intersection Observer, добавить WebP fallback, оптимизировать размеры",
        "testStrategy": "Проверить что изображения загружаются только при скролле",
        "subtasks": []
      },
      {
        "id": 7,
        "title": "Image Optimization",
        "description": "Оптимизировать изображения (WebP формат, сжатие)",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "6"
        ],
        "details": "Конвертировать в WebP, настроить responsive images, сжать без потери качества",
        "testStrategy": "Сравнить размер изображений до и после оптимизации",
        "subtasks": []
      },
      {
        "id": 8,
        "title": "Critical CSS Inline",
        "description": "Настроить critical CSS inline для быстрой отрисовки",
        "status": "pending",
        "priority": "high",
        "dependencies": [],
        "details": "Выделить критический CSS, встроить inline, отложить остальные стили",
        "testStrategy": "Проверить что первый экран рендерится без блокировки CSS",
        "subtasks": []
      },
      {
        "id": 9,
        "title": "Tree Shaking Optimization",
        "description": "Применить tree shaking для удаления неиспользуемого кода",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "1"
        ],
        "details": "Настроить Webpack/Vite tree shaking, убрать unused imports, оптимизировать vendor chunks",
        "testStrategy": "Убедиться что неиспользуемый код не попадает в bundle",
        "subtasks": []
      },
      {
        "id": 10,
        "title": "Font Loading Optimization",
        "description": "Оптимизировать загрузку шрифтов (font-display: swap)",
        "status": "pending",
        "priority": "low",
        "dependencies": [],
        "details": "Добавить font-display: swap, preload критичные шрифты, оптимизировать fallback",
        "testStrategy": "Проверить что шрифты не блокируют рендеринг",
        "subtasks": []
      },
      {
        "id": 11,
        "title": "Server Compression Setup",
        "description": "Настроить Gzip/Brotli сжатие на сервере",
        "status": "pending",
        "priority": "medium",
        "dependencies": [],
        "details": "Настроить сжатие для JS, CSS, HTML файлов, оптимизировать заголовки кеширования",
        "testStrategy": "Проверить что ресурсы приходят сжатыми",
        "subtasks": []
      },
      {
        "id": 12,
        "title": "Final Lighthouse Audit",
        "description": "Повторно запустить Lighthouse аудит и проверить улучшения",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11"
        ],
        "details": "Финальная проверка всех метрик: FCP < 1.8s, LCP < 2.5s, Speed Index < 3.4s",
        "testStrategy": "Lighthouse Performance Score должен быть > 90",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-09-06T22:02:16.429Z",
      "updated": "2025-09-06T22:05:00.000Z",
      "description": "SEO and performance optimization tasks"
    }
  },
  "pricing-promo": {
    "tasks": [
      {
        "id": 1,
        "title": "Pricing Data Structure",
        "description": "Создать единый источник данных для цен и пакетов",
        "status": "pending",
        "priority": "high",
        "dependencies": [],
        "details": "Создать src/data/pricing.ts с packages: Start(2000 PLN), Standard(3500 PLN), Pro(6000 PLN). Добавить promo: New Client Launch -70% для пакета Start (600 PLN). Включить features, limits, isPromoEligible для каждого пакета.",
        "testStrategy": "Проверить что все пакеты и промо корректно экспортируются, цены в PLN",
        "subtasks": []
      },
      {
        "id": 2,
        "title": "Pricing Logic Hook",
        "description": "Реализовать usePricing() хук для обработки цен и промо",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1"
        ],
        "details": "Компонент usePricing() читает конфиг и применяет активные промо к eligible-пакетам. Возвращает finalPrice, oldPrice (если была скидка), promoId. Логика: promoPrice = round(originalPrice * (1-discount)).",
        "testStrategy": "Unit тесты для расчета промо-цен, проверить что Start показывает 600 PLN с oldPrice 2000 PLN",
        "subtasks": []
      },
      {
        "id": 3,
        "title": "Pricing UI Components",
        "description": "Создать компоненты PricingSection, PlanCard, PromoBadge, Price",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "2"
        ],
        "details": "PricingSection отображает 3 пакета. PlanCard показывает старую/новую цену для промо. PromoBadge показывает -70%. Price форматирует цены через Intl.NumberFormat('pl-PL', currency: 'PLN'). Кнопки CTA: Zamów + Zapytaj o szczegóły.",
        "testStrategy": "Проверить что для Start отображается ~~2000 PLN~~ → 600 PLN с бейджем -70%",
        "subtasks": []
      },
      {
        "id": 4,
        "title": "Services/Pricing Page",
        "description": "Обновить страницу услуг/ценника с новыми пакетами",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "3"
        ],
        "details": "Добавить секцию Cennik/Pakiety на страницу услуг. Интегрировать PricingSection. Обновить мета-данные: title 'Pakiety stron WWW dla małych firm | Change', description с промо -70%.",
        "testStrategy": "Проверить что страница отображает все 3 пакета с корректными ценами и промо",
        "subtasks": []
      },
      {
        "id": 5,
        "title": "JSON-LD Product/Offer Schema",
        "description": "Добавить structured data для пакетов",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "4"
        ],
        "details": "Добавить JSON-LD Product/Offer для каждого пакета: priceCurrency: PLN, price, availability: InStock. Для промо-пакета указать priceValidUntil. One schema per plan.",
        "testStrategy": "Проверить что в HTML присутствует корректный JSON-LD для всех пакетов, валидация через Google Structured Data Testing Tool",
        "subtasks": []
      },
      {
        "id": 6,
        "title": "GA4 Tracking Integration",
        "description": "Интегрировать отслеживание выбора пакетов в GA4",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "4"
        ],
        "details": "При клике Zamów отправлять GA4 события: select_promotion с promoId, select_item с planId. В форму заявки добавить скрытые поля planId и promoId.",
        "testStrategy": "Проверить что события корректно отправляются в GA4 при клике на кнопки CTA",
        "subtasks": []
      },
      {
        "id": 7,
        "title": "Legal & Promo Conditions",
        "description": "Добавить условия промо и правовую информацию",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "4"
        ],
        "details": "Добавить блок условий промо: 1 домен, 1 раунд правок, без кастомной съемки/иллюстраций. Ссылка 'Szczegóły promocji'. legalNote в конфиге промо.",
        "testStrategy": "Проверить что условия промо отображаются на странице и доступны по ссылке",
        "subtasks": []
      },
      {
        "id": 8,
        "title": "Internationalization (i18n)",
        "description": "Локализация текстов пакетов и промо pl/en",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "3"
        ],
        "details": "Тексты пакетов и промо завернуть в i18n ресурсы (pl/en). Цены остаются в PLN для обоих языков. Перевести названия пакетов, описания features, условия промо.",
        "testStrategy": "Проверить что переключение языка работает, цены остаются в PLN",
        "subtasks": []
      },
      {
        "id": 9,
        "title": "SEO Optimization & Lighthouse",
        "description": "Оптимизировать SEO страницы услуг/ценника",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "5",
          "6",
          "8"
        ],
        "details": "Финальная SEO-оптимизация страницы услуг: мета-теги, JSON-LD, hreflang для pl/en, оптимизация контента. Цель: Lighthouse SEO = 100.",
        "testStrategy": "Lighthouse SEO аудит должен показывать 100 баллов",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-09-06T22:08:27.753Z",
      "updated": "2025-09-06T22:10:00.000Z",
      "description": "Pricing packages and promotional system implementation"
    }
  },
  "technical-implementation": {
    "tasks": [
      {
        "id": 1,
        "title": "Webpack Bundle Analyzer Setup",
        "description": "Настроить webpack-bundle-analyzer для анализа размера bundle",
        "status": "done",
        "priority": "high",
        "dependencies": [],
        "details": "Установить webpack-bundle-analyzer, добавить npm script 'analyze', настроить генерацию отчета в CI/CD. Проанализировать текущие chunk размеры и выявить самые тяжелые компоненты.",
        "testStrategy": "Запустить npm run analyze, получить интерактивный отчет, зафиксировать baseline размеров",
        "subtasks": []
      },
      {
        "id": 2,
        "title": "Vite Build Configuration Optimization",
        "description": "Оптимизировать конфигурацию Vite для production builds",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1"
        ],
        "details": "Настроить rollupOptions в vite.config.ts: chunkSizeWarningLimit, manual chunks для vendor/app разделения, sourcemap: false для prod, minify: 'terser' с оптимизациями.",
        "testStrategy": "Сравнить размер bundle до и после оптимизации, проверить что функциональность не нарушена",
        "subtasks": []
      },
      {
        "id": 3,
        "title": "Dynamic Route Imports Implementation",
        "description": "Реализовать динамические импорты для роутов",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "2"
        ],
        "details": "Заменить статические импорты компонентов страниц на React.lazy(() => import()). Добавить Suspense с fallback компонентами. Настроить prefetch для критических роутов.",
        "testStrategy": "Проверить что каждый роут загружается отдельным chunk'ом, измерить TTI для роутов",
        "subtasks": []
      },
      {
        "id": 4,
        "title": "Tree Shaking Configuration",
        "description": "Настроить tree shaking для удаления неиспользуемого кода",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "2"
        ],
        "details": "Настроить sideEffects: false в package.json, проверить ES modules импорты, настроить Terser для удаления dead code, оптимизировать lodash/moment импорты.",
        "testStrategy": "Проверить что неиспользуемые экспорты не попадают в финальный bundle",
        "subtasks": []
      },
      {
        "id": 5,
        "title": "Critical CSS Extraction",
        "description": "Выделить и встроить критический CSS inline",
        "status": "done",
        "priority": "high",
        "dependencies": [],
        "details": "Использовать critical или penthouse для генерации критического CSS. Встроить critical CSS в <head>, отложить остальные стили через rel='preload'. Настроить для разных viewport размеров.",
        "testStrategy": "Проверить что первый экран рендерится без блокировки CSS, FCP улучшается",
        "subtasks": []
      },
      {
        "id": 6,
        "title": "Image Optimization Pipeline",
        "description": "Настроить автоматическую оптимизацию изображений",
        "status": "pending",
        "priority": "medium",
        "dependencies": [],
        "details": "Настроить vite-plugin-imagemin или squoosh для автоматического сжатия. Генерировать WebP/AVIF версии. Настроить responsive images с srcSet. Добавить blur placeholders.",
        "testStrategy": "Сравнить размер изображений до/после, проверить поддержку WebP fallback",
        "subtasks": []
      },
      {
        "id": 7,
        "title": "Lazy Loading Images Component",
        "description": "Создать компонент LazyImage с Intersection Observer",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "6"
        ],
        "details": "Создать src/components/LazyImage.tsx с Intersection Observer API. Добавить loading='lazy', blur placeholder, error handling. Поддержка srcSet и WebP.",
        "testStrategy": "Проверить что изображения загружаются только при появлении в viewport",
        "subtasks": []
      },
      {
        "id": 8,
        "title": "Font Loading Optimization",
        "description": "Оптимизировать загрузку веб-шрифтов",
        "status": "pending",
        "priority": "low",
        "dependencies": [],
        "details": "Добавить font-display: swap в CSS. Preload критические шрифты через <link rel='preload'>. Настроить font fallback с похожими метриками. Использовать woff2 формат.",
        "testStrategy": "Проверить что шрифты не блокируют рендеринг, измерить FOUT/FOIT",
        "subtasks": []
      },
      {
        "id": 9,
        "title": "Service Worker & Caching",
        "description": "Реализовать Service Worker для кеширования ресурсов",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "3",
          "5"
        ],
        "details": "Настроить Workbox для генерации SW. Кешировать статические ресурсы, API responses. Реализовать stale-while-revalidate стратегию. Добавить offline fallback.",
        "testStrategy": "Проверить что ресурсы кешируются, сайт работает offline",
        "subtasks": []
      },
      {
        "id": 10,
        "title": "Pricing Data TypeScript Interface",
        "description": "Создать типизированный интерфейс для данных ценообразования",
        "status": "pending",
        "priority": "high",
        "dependencies": [],
        "details": "Создать src/types/pricing.ts с интерфейсами Package, Promo, Feature. Типизировать src/data/pricing.ts. Добавить валидацию через zod или joi.",
        "testStrategy": "Проверить что TypeScript корректно типизирует все pricing данные",
        "subtasks": []
      },
      {
        "id": 11,
        "title": "Pricing Hook Implementation",
        "description": "Реализовать usePricing React хук",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "10"
        ],
        "details": "Создать src/hooks/usePricing.ts с логикой применения промо. useMemo для оптимизации вычислений. Возвращать finalPrice, originalPrice, hasPromo, promoDetails.",
        "testStrategy": "Unit тесты для всех сценариев промо, проверить мемоизацию",
        "subtasks": []
      },
      {
        "id": 12,
        "title": "Price Formatting Utility",
        "description": "Создать утилиту для форматирования цен",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "10"
        ],
        "details": "Создать src/utils/formatPrice.ts с Intl.NumberFormat('pl-PL', {style: 'currency', currency: 'PLN'}). Поддержка разных локалей, обработка null/undefined.",
        "testStrategy": "Тесты для разных сценариев форматирования, локализации",
        "subtasks": []
      },
      {
        "id": 13,
        "title": "PricingSection Component",
        "description": "Создать основной компонент секции ценообразования",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "11",
          "12"
        ],
        "details": "Создать src/components/pricing/PricingSection.tsx. Responsive grid для 3 пакетов, интеграция с usePricing хуком. Анимации hover/focus состояний.",
        "testStrategy": "Проверить responsive поведение, доступность (ARIA labels)",
        "subtasks": []
      },
      {
        "id": 14,
        "title": "PlanCard Component",
        "description": "Создать компонент карточки тарифного плана",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "12"
        ],
        "details": "Создать src/components/pricing/PlanCard.tsx. Отображение features, цены (старая/новая), популярного тега. CTA кнопки с GA4 events. Поддержка промо-бейджа.",
        "testStrategy": "Проверить все состояния карточки (normal, promo, popular)",
        "subtasks": []
      },
      {
        "id": 15,
        "title": "PromoBadge Component",
        "description": "Создать компонент промо-бейджа",
        "status": "pending",
        "priority": "medium",
        "dependencies": [],
        "details": "Создать src/components/pricing/PromoBadge.tsx. Анимированный бейдж с процентом скидки. Поддержка разных стилей (corner, floating). CSS анимации.",
        "testStrategy": "Проверить визуальное отображение для разных discount значений",
        "subtasks": []
      },
      {
        "id": 16,
        "title": "GA4 Tracking Service",
        "description": "Создать сервис для GA4 трекинга событий",
        "status": "pending",
        "priority": "medium",
        "dependencies": [],
        "details": "Создать src/services/analytics.ts с методами trackPlanSelection, trackPromoClick, trackFormSubmit. TypeScript типы для GA4 events. Error handling и fallbacks.",
        "testStrategy": "Тесты для всех методов трекинга, проверить отправку в GA4",
        "subtasks": []
      },
      {
        "id": 17,
        "title": "Contact Form Enhancement",
        "description": "Расширить контактную форму для трекинга планов",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "16"
        ],
        "details": "Добавить скрытые поля planId, promoId в контактную форму. Предзаполнение при клике на CTA. Валидация и обработка в форме отправки.",
        "testStrategy": "Проверить что planId/promoId корректно передаются при отправке формы",
        "subtasks": []
      },
      {
        "id": 18,
        "title": "JSON-LD Schema Generator",
        "description": "Создать генератор JSON-LD схем для продуктов",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "10"
        ],
        "details": "Создать src/utils/generateProductSchema.ts. Генерация Product/Offer схем для каждого пакета. Поддержка priceValidUntil для промо. Валидация через Google тест.",
        "testStrategy": "Проверить корректность генерируемого JSON-LD через Google Structured Data Testing Tool",
        "subtasks": []
      },
      {
        "id": 19,
        "title": "i18n Resources Structure",
        "description": "Создать структуру i18n ресурсов для pricing",
        "status": "pending",
        "priority": "medium",
        "dependencies": [],
        "details": "Создать src/locales/pl/pricing.json и src/locales/en/pricing.json. Ключи для названий пакетов, features, промо-текстов. Интеграция с react-i18next.",
        "testStrategy": "Проверить что все тексты корректно переводятся, цены остаются в PLN",
        "subtasks": []
      },
      {
        "id": 20,
        "title": "Performance Monitoring Setup",
        "description": "Настроить мониторинг производительности",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "3",
          "5",
          "7"
        ],
        "details": "Интегрировать Web Vitals API для мониторинга FCP, LCP, CLS, FID. Отправка метрик в GA4 или специальный дашборд. Алерты на деградацию производительности.",
        "testStrategy": "Проверить что метрики корректно собираются и отправляются",
        "subtasks": []
      },
      {
        "id": 21,
        "title": "Lighthouse CI Integration",
        "description": "Настроить автоматические Lighthouse аудиты в CI/CD",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "20"
        ],
        "details": "Настроить @lhci/cli в GitHub Actions. Пороги для Performance, SEO, Accessibility. Генерация отчетов, интеграция с PR checks. Fail на деградацию метрик.",
        "testStrategy": "Проверить что CI fails при падении Lighthouse scores ниже порогов",
        "subtasks": []
      },
      {
        "id": 22,
        "title": "Error Boundary Implementation",
        "description": "Реализовать Error Boundaries для pricing компонентов",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "13",
          "14"
        ],
        "details": "Создать src/components/ErrorBoundary.tsx с fallback UI. Обернуть PricingSection в Error Boundary. Логирование ошибок в Sentry или аналогичный сервис.",
        "testStrategy": "Симулировать ошибки в компонентах, проверить fallback UI",
        "subtasks": []
      },
      {
        "id": 23,
        "title": "A/B Testing Framework",
        "description": "Реализовать A/B тестирование для pricing страницы",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "13",
          "16"
        ],
        "details": "Интегрировать Optimizely или собственное решение для A/B тестов. Тесты для разных промо-предложений, расположения кнопок. Трекинг конверсий в GA4.",
        "testStrategy": "Создать тестовый A/B эксперимент, проверить корректность трекинга",
        "subtasks": []
      },
      {
        "id": 24,
        "title": "SEO Meta Tags Optimization",
        "description": "Оптимизировать мета-теги для всех страниц",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "18",
          "19"
        ],
        "details": "Обновить мета-теги страниц с pricing информацией. Уникальные title/description для каждой страницы. Open Graph и Twitter Card метатеги. hreflang для pl/en версий.",
        "testStrategy": "Проверить мета-теги через Lighthouse и Facebook Debugger",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-09-06T22:10:28.125Z",
      "updated": "2025-09-07T18:31:24.278Z",
      "description": "Technical implementation tasks for all features"
    }
  }
}